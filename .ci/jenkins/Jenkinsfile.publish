@Library('jenkins-pipeline-shared-libraries')_

import org.kie.jenkins.MavenCommand

droolsWebsiteRepo = 'drools-website'

pipeline {
    agent {
        docker { 
            image env.AGENT_DOCKER_BUILDER_IMAGE
            args env.AGENT_DOCKER_BUILDER_ARGS
        }
    }
    options {
        timestamps()
        timeout(time: 1, unit: 'HOURS')
        disableConcurrentBuilds(abortPrevious: true)
    }
    environment {
        KOGITO_CI_EMAIL_TO = credentials("${JENKINS_EMAIL_CREDS_ID}")
    }
    stages {
        stage('clone drools-website') {
            steps {
                script {
                    checkoutStartdroolsWeb()
                }
            }
        }
        stage('build drools-website') {
            steps {
                script {
                    dir("${droolsWebsiteRepo}") {
                        MavenCommand mvnCmd = new MavenCommand(this, ['-fae'])
                            .withSettingsXmlId('kie-release-settings')
                        mvnCmd.run('clean package')
                    }
                }
            }
        }
        stage('zip drools-website') {
            steps {
                dir("${droolsWebsiteRepo}") {
                    sh 'tar -cvzf drools-website.tar -C target/website/ .'
                    archiveArtifacts 'drools-website.tar'
                }
            }
        }
        stage('publish drools-website to filemgmt-prod-sync.jboss.org') {
            steps {
                dir("${droolsWebsiteRepo}") {
                    sshagent(['drools-filemgmt']) {
                        sh './scripts/rsync_website.sh'
                    }
                }
            }
        }
    }
    post {
        failure {
            emailext to: "${KOGITO_CI_EMAIL_TO}",
            subject: 'status of drools-website automatic publishing',
            body: ' The status of Jenkins CI job for automatic publishing of the drools-website #${BUILD_NUMBER} was: FAILURE \n' +
            'because of ${BUILD_URL}consoleText \n' +
            '(IMPORTANT: For visiting the links you need to have access to Red Hat VPN)'
            cleanWs()
        }
        fixed {
            emailext to: "${KOGITO_CI_EMAIL_TO}",
            subject: 'status of drools-website automatic publishing',
            body: 'The Jenkins CI job of automatic publishing of the drools-website #${BUILD_NUMBER} was fixed'
            cleanWs()
        }
        success {
            emailext to: "${KOGITO_CI_EMAIL_TO}",
            subject: 'status of drools-website automatic publishing',
            body: 'The status of Jenkins CI job for automatic publishing of the drools-website #${BUILD_NUMBER} was: SUCCESSFUL'
            cleanWs()
        }
    }
}

void checkoutStartdroolsWeb() {
    dir(droolsWebsiteRepo) {
        checkout(githubscm.resolveRepository(droolsWebsiteRepo, env.GIT_AUTHOR, env.BUILD_BRANCH_NAME, false, env.GIT_AUTHOR_CREDENTIALS_ID))
    }
}
